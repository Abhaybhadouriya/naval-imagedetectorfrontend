---
apiVersion: v1
kind: Secret
metadata:
  name: image-processing-mysql-secret
type: Opaque
data:
  mysql-root-password: cGFzc3dvcmQ=   # Base64 encoded 'password' (change if needed)
  mysql-user: bmF2YWw=               # Base64 encoded 'naval'
  mysql-password: cGFzc3dvcmQ=       # Base64 encoded 'password' (replace with your actual password in base64)
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: image-processing-mysql-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/image-processing-mysql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: image-processing-mysql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: image-processing-mysql
spec:
  selector:
    matchLabels:
      app: image-processing-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: image-processing-mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: image-processing-mysql-secret
                  key: mysql-root-password
            - name: MYSQL_DATABASE
              value: image_processing
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: image-processing-mysql-secret
                  key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: image-processing-mysql-secret
                  key: mysql-password
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: image-processing-mysql-storage
              mountPath: /var/lib/mysql
          command: ['sh', '-c', 'echo "CREATE DATABASE IF NOT EXISTS image_processing; USE image_processing; CREATE TABLE IF NOT EXISTS process (id INT AUTO_INCREMENT PRIMARY KEY, original_filename VARCHAR(255) NOT NULL, processed_filename VARCHAR(255) NOT NULL, time DATETIME NOT NULL, status ENUM(\"success\", \"failed\") NOT NULL);" > /docker-entrypoint-initdb.d/init.sql && exec docker-entrypoint.sh mysqld']
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
      volumes:
        - name: image-processing-mysql-storage
          persistentVolumeClaim:
            claimName: image-processing-mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: image-processing-mysql
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: image-processing-mysql
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: image-processing-mysql-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: image-processing-mysql
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50